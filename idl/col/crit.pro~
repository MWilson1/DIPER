;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Document name: crit.pro
; Created by:    Phil &, HAO/NCAR, Boulder CO USA, August 13, 1996
;
; Last Modified: Tue Dec 30 11:05:35 2003 by judge (Philip Judge) on niwot.local
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
PRO crit,te=te,file=file, help=help
;+
; PROJECT:
;       HAOS-DIAPER
;
; NAME:
;       crit
;
; PURPOSE: 
;       calculates "critical densities" for given levels- i.e. those
;       electron densities at which collisional de-excitation equals radiative
;       lifetime, and prints results to the screen.
; EXPLANATION:
;       
; CALLING SEQUENCE: 
;       crit
;
; INPUTS:
;       
; OPTIONAL INPUTS: 
;       None.
;
; OUTPUTS:
;       None.
;
; OPTIONAL OUTPUTS:
;       None.
;
; KEYWORD PARAMETERS: 
;       /help.  Will call doc_library and list header, and return
;       file=file  atomic file to be read.  If not set, use data stored in
;       common catom, cgencol
;       te=te  electron temperature in degrees K.  Default = 1.e5
; CALLS:
;       None.
;
; COMMON BLOCKS:
;       catom, cgencol
;
; RESTRICTIONS: 
;       None.
;
; SIDE EFFECTS:
;       Produces text output to screen, updates common block variables c.
;
; CATEGORY:
;       
; PREVIOUS HISTORY:
;       Written August 13, 1996, by Phil &, HAO/NCAR, Boulder CO USA
;
; MODIFICATION HISTORY:
;       
; VERSION:
;       Version 1, August 13, 1996
;-
;
@cdiper
@cse
;
IF(N_ELEMENTS(help) GT 0) THEN BEGIN
   doc_library,'crit'
   RETURN
ENDIF
IF(!regime EQ 2) THEN BEGIN
   MESSAGE,'!REGIME ='+strn(!regime)+' - it must be 0 or 1',/inf
   MESSAGE,'action: stop'
ENDIF   
;
nozeror = 0
;
if(n_elements(te) eq 0) then begin
  message,'Temperature of 10^5 K used to determine critical densities',/inf
  temp=1.E5
endif else begin
  temp=te
endelse
;
;
nne=1.E0
nh=fltarr(6)
nh(5)=nne
ltepop
crat
;
;
print,' ******  CRITICAL ELECTRON DENSITIES  [cm-3] ******
print,' FOR ',atom.ATOMID,' AT TEMPERATURES OF ',temp,'K' 
head='Trans Lambda [A]  A        Upper lev    Lower lev  Ne(crit) Flag  Br Ratio ION' 
head1='Sensitivity Flags: I = interstellar, N=nebular, S= solar '
print,head
print,head1
form='(I3,1x,f12.3,1x,e9.2,1x 2(a12,1x),e9.2,A2,1x,e9.2,1x,A)'
page=15
for kr=0,atom.nline-1 do begin
  ir=trn(kr).irad-1
  labsplit,lvl(ir).label,conf,multip,parity,L,J ,lab_idl,lab_tex
  labi=conf+' '+multip+L+' '+J
  jr=trn(kr).jrad-1
  labsplit,lvl(jr).label,conf,multip,parity,L,J ,lab_idl,lab_tex
  labj=conf+' '+multip+L+' '+J
  cout=total(c(jr,*))
  ncrit = trn(kr).a/cout
  flag=' '
  if(ncrit lt 1.e13) then flag='S'
  if(ncrit lt 1.e7) then flag='N'
  if(ncrit lt 1.e2) then flag='I'
  j=where(trn.jrad-1 eq jr)
  br= trn(kr).a / total(trn(j).a)
  ionn=roman(lvl(jr).ion)
  print,kr,convl(trn(kr).alamb),trn(kr).a,labj,labi,ncrit,flag,br,ionn,form=form
  if(kr ne 0 and kr/page -float(kr)/float(page) eq 0) then begin
    str='' & read,str
    print,head
    print,head1
  endif
endfor
return
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; End of 'crit.pro'.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
