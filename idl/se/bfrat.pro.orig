;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Document name: bfrat.pro
; Created by:    Phil &, HAO/NCAR, Boulder CO USA, October 6, 1995
;
; Last Modified: Mon Mar 13 09:55:06 2006 by judge (judge) on macniwot.local
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
PRO bfrat
;+
; PROJECT:
;       HAOS-DIAPER
;
; NAME:
;       bfrat
;
; PURPOSE: 
;     computes bound-free rates(photoionization, recombination)
;       
; EXPLANATION:
;       
; CALLING SEQUENCE: 
;       bfrat
;
; INPUTS:
;       
; OPTIONAL INPUTS: 
;       None.
;
; OUTPUTS:
;       rij, rji in common catom
;
; OPTIONAL OUTPUTS:
;       None.
;
; KEYWORD PARAMETERS: 
;       /help.  Will call doc_library and list header, and return
;
; CALLS:
;       planck
;
; COMMON BLOCKS:
;       CATOM, CESC
;
; RESTRICTIONS: 
;       
;
; SIDE EFFECTS:
;       None.
;
; CATEGORY:
;       
; PREVIOUS HISTORY:
;       Written October 6, 1995, by Phil &, HAO/NCAR, Boulder CO USA
;
; MODIFICATION HISTORY:
;       
; VERSION:
;       Version 1, October 6, 1995
;-
;
@cdiaper
@cse
COMMON bfat1,messg
messg = 0l
;
IF(nozeror EQ 0 AND atom.nrad GT 0) THEN BEGIN 
   rij = 0.*trn.a
   rji = rij
ENDIF
;
ibeg = atom.nline
mstr = 'poor quadrature for transitions: '
for kr=atom.nline,atom.nrad-1  do  begin
  ny=1+indgen(trn(kr).nq) 
  i=trn(kr).irad
  j=trn(kr).jrad
;
  nu = trn(kr).frq(ny)
  hn3c2=2.*hh*nu*nu/cc*nu/cc
  gij=nstar(i)/nstar(j)*exp(-hh*nu/bk/temp)
  alfa=trn(kr).alfac(ny)
;
  wqmu=trn(kr).wq(ny)
  wqmuh=wqmu/hny4p/nu*trn(kr).frq(0)
  IF(N_ELEMENTS(jinc) EQ 0) THEN BEGIN
     jbar=0.
  ENDIF ELSE BEGIN
     jbar = jinc(ibeg:ibeg+trn(kr).nq-1)
  ENDELSE
  ibeg = ibeg+trn(kr).nq
  rec = wqmuh*alfa*gij*(jbar+hn3c2)
  jbar = jbar*pesc(kr)
;
  integr = 4.*!pi*jbar*alfa/(hh*nu)
  t = total(wqmuh*alfa*jbar) ; orig
  IF(t LT 0.) THEN message,'photoionization rate lt 0. for transition ' +string(kr)
  rij(kr)=t +rij(kr)
  intgd = wqmuh*alfa*gij*(jbar+hn3c2)
  sd = stdev(intgd,mean)
  IF(intgd(0) GT (mean+5.*sd) OR intgd(trn(kr).nq-1) GT (mean+sd)) THEN BEGIN
     messg = messg+1
     mstr = mstr+' '+strn(kr)
  ENDIF   
  rji(kr)=total(intgd)*pesc(kr) + rji(kr)
  matrix(j,i) = matrix(j,i) + rji(kr)
  matrix(i,j) = matrix(i,j) + rij(kr)
ENDFOR
;IF(messg Eq 1) then  message,mstr,/inf
return
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; End of 'bfrat.pro'.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
